<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Scholarship Application Form</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: Arial, sans-serif;
            background-color: #f5f5f5;
            padding: 20px;
        }
        
        .container {
            max-width: 800px;
            margin: 0 auto;
            background: white;
            padding: 30px;
            border-radius: 10px;
            box-shadow: 0 0 20px rgba(0,0,0,0.1);
        }
        
        h1 {
            text-align: center;
            color: #333;
            margin-bottom: 30px;
            font-size: 2em;
        }
        
        .form-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 20px;
        }
        
        .form-group {
            display: flex;
            flex-direction: column;
        }
        
        .form-group.full-width {
            grid-column: 1 / -1;
        }
        
        label {
            font-weight: bold;
            margin-bottom: 5px;
            color: #555;
        }
        
        input[type="text"],
        input[type="date"],
        input[type="number"],
        input[type="email"],
        input[type="tel"],
        textarea {
            width: 100%;
            padding: 10px;
            border: 2px solid #ddd;
            border-radius: 5px;
            font-size: 16px;
            transition: border-color 0.3s;
        }
        
        input[type="text"]:focus,
        input[type="date"]:focus,
        input[type="number"]:focus,
        input[type="email"]:focus,
        input[type="tel"]:focus,
        textarea:focus {
            outline: none;
            border-color: #4CAF50;
        }
        
        input[type="file"] {
            padding: 5px;
            border: 2px dashed #ddd;
            border-radius: 5px;
            background-color: #fafafa;
        }
        
        .file-info {
            font-size: 12px;
            color: #666;
            margin-top: 5px;
        }
        
        .error-message {
            color: #e74c3c;
            font-size: 14px;
            margin-top: 5px;
            display: none;
        }
        
        .success-message {
            color: #27ae60;
            font-size: 14px;
            margin-top: 5px;
            display: none;
        }
        
        .submit-btn {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 15px 40px;
            border: none;
            border-radius: 25px;
            font-size: 18px;
            cursor: pointer;
            margin: 30px auto 0;
            display: block;
            transition: transform 0.3s;
        }
        
        .submit-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(0,0,0,0.2);
        }
        
        .file-section {
            background-color: #f8f9fa;
            padding: 20px;
            border-radius: 8px;
            margin-top: 20px;
        }
        
        .file-section h3 {
            margin-bottom: 15px;
            color: #333;
        }
        
        .optional {
            color: #666;
            font-style: italic;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>Scholarship Application Form</h1>
        
        <form id="scholarshipForm">
            <div class="form-grid">
                <div class="form-group">
                    <label for="name">Full Name *</label>
                    <input type="text" id="name" name="name" required>
                </div>
                
                <div class="form-group">
                    <label for="dob">Date of Birth *</label>
                    <input type="date" id="dob" name="dob" required>
                </div>
                
                <div class="form-group">
                    <label for="age">Age *</label>
                    <input type="number" id="age" name="age" required>
                </div>
                
                <div class="form-group">
                    <label for="fatherName">Father's Name *</label>
                    <input type="text" id="fatherName" name="fatherName" required>
                </div>
                
                <div class="form-group">
                    <label for="motherName">Mother's Name *</label>
                    <input type="text" id="motherName" name="motherName" required>
                </div>
                
                <div class="form-group">
                    <label for="email">Email Address *</label>
                    <input type="email" id="email" name="email" required>
                </div>
                
                <div class="form-group">
                    <label for="phone">Phone Number *</label>
                    <input type="tel" id="phone" name="phone" pattern="[0-9]{10}" placeholder="10-digit number" required>
                </div>
                
                <div class="form-group">
                    <label for="church">Church Affiliation *</label>
                    <input type="text" id="church" name="church" required>
                </div>
                
                <div class="form-group full-width">
                    <label for="address">Address *</label>
                    <textarea id="address" name="address" rows="3" required></textarea>
                </div>
                
                <div class="form-group">
                    <label for="subjects12">Subjects studied in Class 12 *</label>
                    <input type="text" id="subjects12" name="subjects12" required>
                </div>
                
                <div class="form-group">
                    <label for="marks12">Marks in Class 12 (%) *</label>
                    <input type="number" id="marks10" name="marks10" min="0" max="100" required>
                </div>
                
                <div class="form-group">
                    <label for="marks10">Marks in Class 10 (%) *</label>
                    <input type="number" id="marks12" name="marks12" min="0" max="100" required>
                </div>
                
                <div class="form-group">
                    <label for="course">Course Selected *</label>
                    <input type="text" id="course" name="course" required>
                </div>
                
                <div class="form-group">
                    <label for="years">Duration of Education (years) *</label>
                    <input type="number" id="years" name="years" min="1" max="10" required>
                </div>
                <div class="form-group">
                    <label for="tuitionFee">1st Year Tuition Fee (INR) *</label>
                    <input type="number" id="tuitionFee" name="tuitionFee" min="0" required>
                </div>
            </div>
            
            <div class="file-section">
                <h3>Required Documents</h3>
                <div class="form-grid">
                    <div class="form-group">
                        <label for="marksheet10">Upload 10th Marksheet *</label>
                        <input type="file" id="marksheet10" name="marksheet10" accept=".pdf,.jpg,.jpeg,.png" required>
                        <div class="file-info">Max size: 5MB | Formats: PDF, JPG, PNG</div>
                        <div class="error-message" id="marksheet10-error"></div>
                    </div>
                    
                    <div class="form-group">
                        <label for="marksheet12">Upload 12th Marksheet *</label>
                        <input type="file" id="marksheet12" name="marksheet12" accept=".pdf,.jpg,.jpeg,.png" required>
                        <div class="file-info">Max size: 5MB | Formats: PDF, JPG, PNG</div>
                        <div class="error-message" id="marksheet12-error"></div>
                    </div>
                    
                    <div class="form-group">
                        <label for="churchCert">Church Membership Certificate *</label>
                        <input type="file" id="churchCert" name="churchCert" accept=".pdf,.jpg,.jpeg,.png" required>
                        <div class="file-info">Max size: 5MB | Formats: PDF, JPG, PNG</div>
                        <div class="error-message" id="churchCert-error"></div>
                    </div>
                    
                    <div class="form-group">
                        <label for="aadhar">Aadhar Card *</label>
                        <input type="file" id="aadhar" name="aadhar" accept=".pdf,.jpg,.jpeg,.png" required>
                        <div class="file-info">Max size: 5MB | Formats: PDF, JPG, PNG</div>
                        <div class="error-message" id="aadhar-error"></div>
                    </div>
                    
                    <div class="form-group">
                        <label for="incomeCert">Income Certificate *</label>
                        <input type="file" id="incomeCert" name="incomeCert" accept=".pdf,.jpg,.jpeg,.png" required>
                        <div class="file-info">Max size: 5MB | Formats: PDF, JPG, PNG</div>
                        <div class="error-message" id="incomeCert-error"></div>
                    </div>
                    
                    <div class="form-group">
                        <label for="deathCert">Parent(s) Death Certificate <span class="optional">(if applicable)</span></label>
                        <input type="file" id="deathCert" name="deathCert" accept=".pdf,.jpg,.jpeg,.png">
                        <div class="file-info">Max size: 5MB | Formats: PDF, JPG, PNG</div>
                        <div class="error-message" id="deathCert-error"></div>
                    </div>
                </div>
            </div>
            
            <button type="submit" class="submit-btn">Submit Application</button>
        </form>
    </div>

    <script>
        // Firebase configuration for medium nonprofit
        const firebaseConfig = {
            // Replace with your Firebase config
            apiKey: "your-api-key",
            authDomain: "your-project.firebaseapp.com",
            projectId: "your-project-id",
            storageBucket: "your-project.appspot.com",
            messagingSenderId: "123456789",
            appId: "your-app-id"
        };
        
        // Initialize Firebase (uncomment when you have config)
        // import { initializeApp } from 'firebase/app';
        // import { getStorage, ref, uploadBytes, getDownloadURL } from 'firebase/storage';
        // import { getFirestore, collection, addDoc } from 'firebase/firestore';
        // const app = initializeApp(firebaseConfig);
        // const storage = getStorage(app);
        // const db = getFirestore(app);
        
        // File size limit (5MB in bytes)
        const MAX_FILE_SIZE = 5 * 1024 * 1024;
        
        // Function to validate file size
        function validateFileSize(fileInput) {
            const file = fileInput.files[0];
            const errorElement = document.getElementById(fileInput.id + '-error');
            
            if (file && file.size > MAX_FILE_SIZE) {
                errorElement.textContent = `File size (${(file.size / (1024 * 1024)).toFixed(2)}MB) exceeds 5MB limit`;
                errorElement.style.display = 'block';
                fileInput.value = ''; // Clear the file input
                return false;
            } else {
                errorElement.style.display = 'none';
                return true;
            }
        }
        
        // Phone number validation
        function validatePhone(phoneInput) {
            const phone = phoneInput.value.replace(/\D/g, ''); // Remove non-digits
            if (phone.length === 10) {
                phoneInput.setCustomValidity('');
                return true;
            } else {
                phoneInput.setCustomValidity('Please enter a valid 10-digit phone number');
                return false;
            }
        }
        
        // Add validation to phone input
        document.getElementById('phone').addEventListener('input', function() {
            this.value = this.value.replace(/\D/g, ''); // Only allow digits
            validatePhone(this);
        });
        
        // Add file size validation to all file inputs
        document.querySelectorAll('input[type="file"]').forEach(input => {
            input.addEventListener('change', function() {
                validateFileSize(this);
            });
        });
        
        // Firebase upload function for medium nonprofit
        async function uploadToFirebase(formData) {
            try {
                const applicantName = formData.get('name').replace(/[^a-zA-Z0-9]/g, '-').toLowerCase();
                const timestamp = Date.now();
                const fileUrls = {};
                
                // File upload fields
                const fileFields = ['marksheet10', 'marksheet12', 'churchCert', 'aadhar', 'incomeCert', 'deathCert'];
                
                // Upload files to Firebase Storage
                for (const field of fileFields) {
                    const file = formData.get(field);
                    if (file && file.size > 0) {
                        const fileName = `${applicantName}_${field}_${timestamp}.${file.name.split('.').pop()}`;
                        
                        // In a real implementation, you would use:
                        // const storageRef = ref(storage, `applications/2024/${fileName}`);
                        // const snapshot = await uploadBytes(storageRef, file);
                        // fileUrls[field] = await getDownloadURL(snapshot.ref);
                        
                        // For now, we simulate the upload
                        fileUrls[field] = `simulated-url-${fileName}`;
                    }
                }
                
                // Prepare application data
                const applicationData = {
                    // Personal Information
                    name: formData.get('name'),
                    email: formData.get('email'),
                    phone: formData.get('phone'),
                    dateOfBirth: formData.get('dob'),
                    age: formData.get('age'),
                    fatherName: formData.get('fatherName'),
                    motherName: formData.get('motherName'),
                    church: formData.get('church'),
                    address: formData.get('address'),
                    
                    // Academic Information
                    subjects12: formData.get('subjects12'),
                    marks10: formData.get('marks10'),
                    marks12: formData.get('marks12'),
                    course: formData.get('course'),
                    years: formData.get('years'),
                    
                    // Financial Information
                    admissionFee: formData.get('admissionFee'),
                    tuitionFee: formData.get('tuitionFee'),
                    
                    // File URLs
                    fileUrls: fileUrls,
                    
                    // Metadata
                    submittedAt: new Date().toISOString(),
                    status: 'pending',
                    applicationId: `APP-${timestamp}`
                };
                
                // Save to Firestore
                // In a real implementation:
                // await addDoc(collection(db, 'applications'), applicationData);
                
                console.log('Application Data:', applicationData);
                return applicationData;
                
            } catch (error) {
                console.error('Firebase upload error:', error);
                throw error;
            }
        }
        
        document.getElementById('scholarshipForm').addEventListener('submit', async function(e) {
            e.preventDefault();
            
            // Validate phone number
            const phoneInput = document.getElementById('phone');
            if (!validatePhone(phoneInput)) {
                alert('Please enter a valid 10-digit phone number');
                return;
            }
            
            // Validate all file sizes before submission
            let allFilesValid = true;
            document.querySelectorAll('input[type="file"]').forEach(input => {
                if (input.files.length > 0 && !validateFileSize(input)) {
                    allFilesValid = false;
                }
            });
            
            if (!allFilesValid) {
                alert('Please fix file size errors before submitting');
                return;
            }
            
            // Get form data
            const formData = new FormData(this);
            
            // Show loading state
            const submitBtn = document.querySelector('.submit-btn');
            const originalText = submitBtn.textContent;
            submitBtn.textContent = 'Submitting Application...';
            submitBtn.disabled = true;
            
            try {
                // Upload to Firebase (or your chosen backend)
                await uploadToFirebase(formData);
                
                // Success message
                alert(`Application submitted successfully!\n\nApplication ID: APP-${Date.now()}\n\nWe will review your application and contact you at ${formData.get('email')} within 5-7 business days.\n\nThank you for applying!`);
                
                // Optional: Reset form after successful submission
                // this.reset();
                
            } catch (error) {
                console.error('Submission error:', error);
                alert('Error submitting application. Please check your internet connection and try again.');
            } finally {
                // Reset button state
                submitBtn.textContent = originalText;
                submitBtn.disabled = false;
            }
        });
        
        // Auto-calculate age from date of birth
        document.getElementById('dob').addEventListener('change', function() {
            const dob = new Date(this.value);
            const today = new Date();
            let age = today.getFullYear() - dob.getFullYear();
            const monthDiff = today.getMonth() - dob.getMonth();
            
            if (monthDiff < 0 || (monthDiff === 0 && today.getDate() < dob.getDate())) {
                age--;
            }
            
            document.getElementById('age').value = age;
        });
    </script>
</body>
</html>

